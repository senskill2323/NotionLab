name: Build & Deploy to VPS

on:
  push:
    branches: [ "main" ]     # adapte si besoin
  workflow_dispatch: {}      # declenchement manuel au besoin
  # Si tu veux aussi sur tags:
  # tags:
  #   - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 20
      REMOTE_HOST: ${{ secrets.VPS_HOST }}
      REMOTE_USER: ${{ secrets.VPS_USER }}
      REMOTE_PORT: ${{ secrets.VPS_PORT }}
      REMOTE_PATH: ${{ secrets.VPS_PATH }}   # ex: /var/www/notionlab6
      NGINX_RELOAD: ${{ secrets.NGINX_RELOAD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build (inject env)
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: npm run build

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${REMOTE_PORT:-22}" "${REMOTE_HOST}" >> ~/.ssh/known_hosts

      - name: Deploy via rsync
        run: |
          RSYNC_FLAGS="-az --delete --chmod=D755,F644"
          rsync $RSYNC_FLAGS -e "ssh -i ~/.ssh/id_ed25519 -p ${REMOTE_PORT:-22}" \
            dist/ "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}/"

      # Optionnel : reload Nginx si necessaire (si tu as sudo sans mot de passe pour ce cmd)
      - name: Reload Nginx (optional)
        if: ${{ env.NGINX_RELOAD == 'true' }}
        run: |
          ssh -i ~/.ssh/id_ed25519 -p ${REMOTE_PORT:-22} \
            "${REMOTE_USER}@${REMOTE_HOST}" \
            'sudo nginx -t && sudo systemctl reload nginx || true'
