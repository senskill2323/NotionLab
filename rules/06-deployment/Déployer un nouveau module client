Résumé

Un nouveau module client repose sur une permission *:view_module, son enregistrement dans modules_registry et le composant React correspondant pour l’affichage et l’aperçu.
La permission alimente la page “Droits et Types d’utilisateurs”, tandis que la ligne modules_registry contrôle la visibilité côté builder, dashboard et Gestionnaire de Modules.
Le module ne s’affiche pour un utilisateur que si la permission est cochée pour son type et si is_active reste à true.
Un layout par défaut peut être ajouté pour pré-générer le module dans les dashboards ne disposant pas encore d’arrangement personnalisé.
Plan d’action

Créer/mettre à jour la permission module_name:view_module dans role_permissions (famille “Modules Clients”, colonnes booléennes pour chaque type) via migration ou script SQL, afin qu’elle apparaisse et soit éditable dans “Droits et Types d’utilisateurs”.
Ajuster les cases pour les types d’utilisateurs cibles (UI admin ou script) afin d’autoriser l’accès au module et forcer un flush/refresh des permissions si besoin.
Insérer le module dans modules_registry avec un module_key unique, required_permission pointant vers la permission créée, is_active=true, description et default_layout (span, ordre) ; prévoir une migration d’activation.
(Optionnel) Ajouter une entrée dashboard_layouts owner_type='default' pour pré-placer le module chez les nouveaux comptes, ou mettre à jour l’existant si le layout doit évoluer.
Implémenter le composant React du module et l’enregistrer dans les componentMap de ClientDashboardContent et du Gestionnaire de Modules pour l’aperçu ; ajouter les assets éventuels (icône, texte).
Vérifier que le module apparaît dans la bibliothèque du builder et sur le dashboard client (permission accordée + module actif), puis consigner la procédure (CHANGELOG, doc interne).