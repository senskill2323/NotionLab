Résumé

Tri des sources effectué via “sous-agents” Règles/UI/Data pour couvrir docs, front et Supabase du module Blueprint Notion.
Module = mindmap ReactFlow à autosauvegarde (src/pages/BlueprintBuilderPage.jsx) + partage public (src/pages/BlueprintSharePage.jsx).
Gestion des blueprints centralisée dans useBlueprintBuilder (CRUD, snapshots, share, autosave) et blueprintApi.js (RPC Supabase).
Intégration dashboard/nav/admin assurée via BlueprintsPanel, ClientDashboardContent, Navigation, ModuleManagerPage.
Stack

React 18 + React Router 6, ReactFlow (reactflow), dnd-kit, Tailwind/Shadcn UI (Button, Input, Tooltip), lucide-react (Loader2, Share2).
State helpers : useBlueprintBuilder (use-debounce, uuid, ReactFlow hooks).
Export visuel : import dynamique html-to-image (BlueprintBuilderPage.jsx:126).
Date formatting : date-fns + locale fr (BlueprintBuilderHeader.jsx:6).
Supabase client maison (customSupabaseClient) pour RPC, REST, storage.
API publique

src/pages/BlueprintBuilderPage.jsx:217 → BlueprintBuilderPage (default) expose shell ReactFlow + palette + header.
src/pages/BlueprintSharePage.jsx:151 → BlueprintSharePage (default) pour lecture publique via token.
src/hooks/useBlueprintBuilder.js:19 → useBlueprintBuilder (actions CRUD/snapshots/share/undo).
src/components/blueprints/BlueprintCanvas.jsx:47/52/116 → exports blueprintNodeTypes, blueprintDefaultEdgeOptions, composant BlueprintCanvas.
src/components/blueprints/BlueprintPalette.jsx:210/326 → getDefaultBlueprintPalette, BlueprintPalette.
src/components/blueprints/BlueprintInspector.jsx:116, BlueprintBuilderHeader.jsx:156, dashboard/modules/BlueprintsPanel.jsx:116 → autres composants UI.
src/lib/blueprints/blueprintApi.js:18-162 → fonctions RPC (listBlueprints, upsertBlueprintGraph, duplicateBlueprint, etc.).
Routes protégées dans src/App.jsx:116-118 via ProtectedRoute.
Structure (fichiers)

src/pages/BlueprintBuilderPage.jsx : layout builder (palette + canvas + header, export JSON/PNG/SVG).
src/hooks/useBlueprintBuilder.js : logique métier (autosave, historique, navigation, interactions Supabase).
src/components/blueprints/BlueprintCanvas.jsx / BlueprintPalette.jsx / BlueprintBuilderHeader.jsx / BlueprintInspector.jsx : composants spécialisés.
src/components/dashboard/modules/BlueprintsPanel.jsx : carte dashboard + génération de partage.
src/pages/BlueprintSharePage.jsx : rendu read-only du token public.
src/lib/blueprints/blueprintApi.js : couche d’accès Supabase.
Supabase/migrations/2025-10-07_blueprint_mindmap_module.sql : schéma, policies, RPC, permissions module.
Intégrations : src/App.jsx, src/components/Navigation.jsx:97, src/components/dashboard/ClientDashboardContent.jsx:31, src/pages/admin/ModuleManagerPage.jsx:33, src/components/ProtectedRoute.jsx:12-26, src/contexts/PermissionsContext.jsx:30-40.
Dépendances

Externes : reactflow, @dnd-kit/core, @dnd-kit/utilities, html-to-image, use-debounce, uuid, date-fns/fr, lucide-react, @supabase/supabase-js.
UI : @/components/ui/{button,input,tooltip,alert-dialog,card} (Shadcn), Tooltip, AlertDialog.
Internes : useToast, ProtectedRoute, ManagedComponent, PermissionsContext, customSupabaseClient.
Utilitaires : cn (BlueprintPalette), useReactFlow.project pour drop repositioning (BlueprintBuilderPage.jsx:52), navigator.clipboard (BlueprintsPanel.jsx:40).
Assets : CSS ReactFlow global import (BlueprintCanvas.jsx:11, BlueprintSharePage.jsx:7).
Flux de données

Chargement liste : useBlueprintBuilder.fetchBlueprints() → listBlueprints() RPC (src/hooks/useBlueprintBuilder.js:107 + blueprintApi.js:24).
Hydratation : loadBlueprint() → getBlueprintById() (useBlueprintBuilder.js:282 / blueprintApi.js:32) → state nodes/edges/blueprint.
Sauvegarde : persistGraph({ autosave|manual }) (useBlueprintBuilder.js:134) → blueprints_upsert_graph RPC (blueprintApi.js:60).
Actions : duplication (useBlueprintBuilder.js:507) → duplicate_blueprint RPC; snapshot/share (useBlueprintBuilder.js:522/537) → RPC dédiées; delete → supabase.from('blueprints').delete() (blueprintApi.js:90).
Dashboard : BlueprintsPanel → listBlueprints + createBlueprintShare; CLI copies token.
Partage public : BlueprintSharePage → getBlueprintPublic (RPC) → ReactFlow lecture seule.
État & effets

Historique undo/redo (50 snapshots) via historyRef (useBlueprintBuilder.js:87-109) avec undo/redo (useBlueprintBuilder.js:423/435).
Autosave : hasUnsavedChangesRef + debouncedAutosave (1200ms) + retry 5s si échec (useBlueprintBuilder.js:182-223).
Sélection nœud synchronisée (selectedNodeId, useEffect ligne 559) et BlueprintPalette filtrée par searchTerm.
Loader initial + navigation auto vers premier blueprint ou création (useBlueprintBuilder.js:351-365).
I/O DB (PostgREST/RPC/SQL)

Tables : public.blueprints, blueprint_nodes, blueprint_edges, blueprint_snapshots, blueprint_shares définies/INDEXées (Supabase/migrations/2025-10-07_blueprint_mindmap_module.sql:3-105).
RPC : list_blueprints, get_blueprint, blueprints_upsert_graph, duplicate_blueprint, create_blueprint_snapshot, create_blueprint_share, get_blueprint_public (migration.sql:346-802).
REST direct : deleteBlueprint & renameBlueprint via supabase.from('blueprints') (blueprintApi.js:90/150).
Module registry & permissions seed (migration.sql:809-843).
Autosave increments autosave_version server-side (migration.sql:392-430).
Realtime (listen/broadcast)

Aucun canal Supabase n’est ouvert sur ce module ; synchronisation uniquement par refetch/manipulation locale (cf. useBlueprintBuilder doc, rules/07-Fonctionnalités/Builder de Notion).
Sécurité (RLS, XSS, CSRF)

RLS owner/admin sur tables blueprints, blueprint_nodes, blueprint_edges, blueprint_snapshots (migration.sql:116-290).
Partage public restreint via policy blueprint_shares_read_public (tokens actifs + expiration) (migration.sql:319-343).
Routes protégées par ProtectedRoute (permet rendu non bloquant mais RLS fait foi) (src/components/ProtectedRoute.jsx:12-46).
Nav contrôlée par component_rules et permission client_blueprints:view_module (migration.sql:809-835 + Navigation.jsx:97).
Contenu ReactFlow : JSX échappé par React, aucune injection directe ; export JSON/PNG uniquement côté client (pas de CSRF supplémentaire).