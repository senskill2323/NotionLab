- Module admin "Invitation" :
  - L'UI appelle `supabase.functions.invoke('invite-user', ...)` ; aucune service key ne doit être exposée côté client.
  - L'Edge function active le profil (`status='active'`), affecte le user_type requis et tente `auth.admin.inviteUserByEmail`.
  - Secrets requis : `SUPABASE_URL`, `SUPABASE_SERVICE_ROLE_KEY`, et `INVITE_REDIRECT_URL` (optionnel, défaut /connexion).
- Fallback manuel (GoTrue indisponible, SMTP HS, quotas...) :
  - Création via `auth.admin.createUser` + mot de passe généré + mise à jour du profil.
  - Tentative de `auth.resetPasswordForEmail` ; en cas d'échec le JSON renvoie `status:"invited_manual"` + `fallback` (mot de passe temporaire, booléen resetEmailSent, éventuelle erreur d'upsert profil).
  - L'UI (`UserManagementPanel`) doit alerter l'équipe support, afficher le mot de passe de secours et prévenir que l'e-mail automatique n'est pas parti.
- Permissions : vérifier via `usePermissions().hasPermission` et maintenir la cohérence `role_permissions` / `modules_registry` / `admin_dashboard_tabs`.
- Parcours utilisateur : bouton "Inviter un utilisateur" (src/components/admin/UserManagementPanel.jsx), redirection par défaut vers `/activation-invitation` pour définir son mot de passe (profil déjà actif).
