---
title: "NotionLab Guide IA - Module Formations"
version: "2"
date: "2025-01-18"
owner: "NEEDS-VERIFY Provide owner or primary contact."
contenu: Objectifs, SLA, contraintes, architecture, découpage, auth, état, logs, config, flags, i18n, accessibilité, ADR, glossaire.
---

<!-- AUTO:BEGIN -->
<!-- ANCHOR:OVERVIEW -->
Le module Formations gere des parcours standard publies et des parcours custom construits par les clients. L'architecture assemble React 18 et Vite 7 pour le frontend avec Supabase pour l'authentification, les donnees et le temps reel.

<!-- ANCHOR:STANDARDS -->
- React 18 + Vite 7 pilotent le catalogue, le builder et les interfaces admin.
- Supabase centralise RPC, fonctions edge, stockage et canal realtime pour les formations.
- Les parcours valides sont figes via des snapshots avant publication.
- Le Kanban formation_module_statuses suit l'avancement par utilisateur et soumission.

<!-- ANCHOR:WORKFLOWS -->
- Cycle parcours : brouillon client -> soumission -> validation admin -> Kanban live synchronise.
- Gardes de routes : ProtectedRoute, ClientOnlyRoute et PublicOnlyRoute utilisent authReady, allowedUserTypes et requiredPermission.
- Permissions observees : owner (bypass), admin (formations:manage_all, admin:access_dashboard), client/vip/guest (builder:view, builder:edit_own_parcours).

<!-- ANCHOR:ACCOUNT_DELETION -->
- Objectif: la suppression d'un utilisateur doit effacer l'ensemble du compte (Auth + identités) et les données liées côté domaine.
- Déclencheurs UI:
  - `src/components/admin/UserManagementPanel.jsx` (corbeille) → appelle `supabase.rpc('admin_delete_user_full', { p_user_id })`.
  - `src/pages/admin/ManageUserPage.jsx` (bouton supprimer) → même RPC.
  - `src/components/account/DeleteAccountSection.jsx` (auto‑suppression) → même RPC.
- Orchestration serveur: RPC `public.admin_delete_user_full(uuid)` (SECURITY DEFINER) qui:
  - Nettoie d'abord les tables domaine: `formation_module_statuses`, `user_formation_snapshots`, `user_formations`, `formation_submissions`, `tickets`, `ticket_replies`, `action_logs`, `chat_messages`, `chat_conversations`, ainsi que les `courses` personnalisés (`author_id` = user, `course_type='custom'`).
  - Supprime ensuite `public.profiles` puis appelle `auth.admin.delete_user(p_user_id)` (supprime aussi `auth.identities`).
- Autorisations: un utilisateur peut se supprimer lui‑même; `owner`/`admin` peuvent supprimer d'autres comptes; seul un `owner` peut supprimer un `owner`.
- Remplacement: l'ancien flux supprimant uniquement `public.profiles` a été remplacé par cette suppression totale; les dialogues de confirmation ont été mis à jour pour le refléter.

<!-- ANCHOR:EXAMPLES -->
```
src/
|-- pages/
|   |-- FormationsPage.jsx
|   |-- FormationDetailPage.jsx
|   |-- FormationBuilderPage.jsx
|   `-- admin/
|       |-- CreateFormationPage.jsx  (NEEDS-VERIFY existe ?)
|       `-- ManageFormationPage.jsx  (NEEDS-VERIFY existe ?)
|-- components/
|   |-- formation/
|   |-- builder/
|   |-- kanban/
|   |-- dashboard/modules/
|   `-- admin/
|-- hooks/
|-- lib/builder/
`-- contexts/BuilderCatalogContext.jsx
```

<!-- ANCHOR:LIMITS -->
- NEEDS-VERIFY : confirmer l'existence de CreateFormationPage.jsx et ManageFormationPage.jsx dans src/pages/admin/.
- Encodage : certains fichiers (ex. src/contexts/SupabaseAuthContext.jsx) montrent des caracteres etendus signe d'encodage degrade.
<!-- AUTO:END -->
